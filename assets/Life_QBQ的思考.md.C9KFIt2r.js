import{_ as e,c as t,o as a,a7 as r}from"./chunks/framework.H1k9SCod.js";const l=JSON.parse('{"title":"QBQ的思考","description":"","frontmatter":{"title":"QBQ的思考","tags":["工作","笔记"],"id":1006,"categories":["Life"],"abbrlink":"4ea5ad13","date":"2008-02-26T16:48:00.000Z"},"headers":[],"relativePath":"Life/QBQ的思考.md","filePath":"Life/QBQ的思考.md","lastUpdated":1719711816000}'),o={name:"Life/QBQ的思考.md"},_=r('<p>QBQ全称是TheQuestionBehindTheQuestion，中文叫做“问题背后的问题”，讲的是工作态度和个人责任意识。去年在当当网买了2本，<a href="http://www.douban.com/subject/1225038/" target="_blank" rel="noreferrer">《QBQ！问题背后的问题》</a>和 <a href="http://www.douban.com/subject/1835217/" target="_blank" rel="noreferrer">《QBQ！的五项修 炼：提高责任意识的最佳实践》</a>，春节闲来无事，再次细读一番。</p><p>工作上我们经常抱怨，抱怨为什么同事不能把事情做好，抱怨为什么要帮别的同事处理问题，或者还经常说“这不是我的错”、“这不关我的事”，如果你觉得这很正常没什么非议，那很遗憾，你跟我一样，需要加强责任感意识。</p><p>我所在的部门很特别，叫做运营支撑部，做着程序员的活，但又不是纯粹的开发（公司有专门的研发部，那些家伙才是NB的程序员），主要处理运营部提交的需求，是介于开发和运营之间一个小部门，比方说运营部设计个网页丢过来，我们进行代码封装，所以经常发生这样的事，“为什么他们不能把图切好”，“为什么他们非要表格套表格”，“为什么要开发来帮美工写CSS”，当然也不是所有同事都这样，起码我自己之前经常这样想，读完书之后，恍然大悟，其实换个思维，一切都好了，“我该如何指导美工按照程序员的意愿切图”，“我该如何教他们使用表格才方便做代码封装”，“我该如何让他们改善CSS写法”，瞧，一下子就从抱怨的阴影里走出来了，转换成帮助别人的热情，结果就是不仅帮助了别人，更帮助了自己，如果能一直坚持下去，对以后工作的效率和激情都是很大的提高。</p><p>不管谁，凡事都不可能总是一帆风顺，总会遇到大大小小的问题，如何处理问题，将产生不同后果，我们往往是抱怨，把责任推给别人，其实再怎么责怪，问题已经存在，关键不是去追究，而是如何解决，我们要敢于面对问题，而不是逃避。</p><p>十几年的电脑操作经验，经常让我觉得某些菜鸟的问题觉得很愚昧，对此类人我是不屑一顾的，但是反过来看，他们正从另一个角度在向我反馈问题，是我说明文档不够清楚，还是根本没做说明，就像某件物品如果看了说明书之后仍然没法使用，那就是说明书的问题，从QBQ来看，有问题，那是我们的问题（想起余世维的一个讲座），我们要勇于承认错误、承担责任。通常我们要求别人改变来迎合自己的习惯，某些人会通过改变自己去适应他人，而我觉得的应该是相互沟通来达成一致，关于沟通可以看余世维的《有效沟通》视频讲座。</p><p>唠叨了很多，最后总结下QBQ，不应该看问题，而应该看问题的解决之道以及产生的根源从而杜绝再次发生，对人而言，书的主旨在于学习、负责、创意、服务、信任。</p><p>写的很乱，我自己也不知道写什么，打算把书再细读一遍。</p>',7),p=[_];function n(s,i,c,d,Q,f){return a(),t("div",{"data-pagefind-body":!0},p)}const h=e(o,[["render",n]]);export{l as __pageData,h as default};
