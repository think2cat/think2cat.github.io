import{_ as a,c as e,o as t,a7 as s}from"./chunks/framework.H1k9SCod.js";const r="/images/2008/01/08_12782_12782.jpg",m=JSON.parse('{"title":"SVN学习笔记","description":"","frontmatter":{"title":"SVN学习笔记","tags":["cvs","svn","笔记"],"id":996,"categories":["IT"],"abbrlink":"a7642b15","date":"2008-01-08T19:21:39.000Z"},"headers":[],"relativePath":"IT/SVN学习笔记.md","filePath":"IT/SVN学习笔记.md","lastUpdated":1720625041000}'),i={name:"IT/SVN学习笔记.md"},o=s(`<p>之前公司因为VSS不能满足需求，所以打算用SVN来管理代码，老猫受命写了这篇文档，好让一些同事快速入门，还没写完。</p><p>半年过去了，公司还在用着龟速的VSS 6.0，这文档也没有写下去的必要了，还是发出来吧</p><hr><h1 id="svn学习笔记" tabindex="-1">SVN学习笔记 <a class="header-anchor" href="#svn学习笔记" aria-label="Permalink to &quot;SVN学习笔记&quot;">​</a></h1><p>创建于：2007年7月25日 最后更新： 2007年8月3日 3:59 PM</p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>一、版本管理基础 1.版本控制介绍 2.常用软件 二、Subversion基础 1.发展历史 2.特性 3.安装 4.组成 5.配置 三、基本操作 1.检出Check Out 2.提交Commit 3.解决冲突 4.标签Tag 四、分支与合并 1.版本库的概念 2.什么是分支？ 3.使用分支 五、进阶 1.以后台服务方式启动 2.从CVS转换到SVN 六、附录 A. 参考资源 B. 相关资源</p><h2 id="一、版本管理基础" tabindex="-1">一、版本管理基础 <a class="header-anchor" href="#一、版本管理基础" aria-label="Permalink to &quot;一、版本管理基础&quot;">​</a></h2><h3 id="_1-版本控制介绍" tabindex="-1">1. 版本控制介绍 <a class="header-anchor" href="#_1-版本控制介绍" aria-label="Permalink to &quot;1. 版本控制介绍&quot;">​</a></h3><p>在多人协作开发软件的时候，经常出现员工A的代码被员工B覆盖，或者今天做了小修改明天却发现需要把代码改回去，版本控制正是为此而诞生的，它是软件开发团队高效协作的重要管理工具。</p><p>简单来说，版本控制服务器是一个特殊的文件服务器，不仅控制用户对文件的读取、写入等操作，更记录了每一次修改的内容。</p><h3 id="_2-常用软件" tabindex="-1">2. 常用软件 <a class="header-anchor" href="#_2-常用软件" aria-label="Permalink to &quot;2. 常用软件&quot;">​</a></h3><h4 id="a-microsoft-visual-sourcesafe" tabindex="-1">A. <strong>Microsoft Visual SourceSafe</strong> <a class="header-anchor" href="#a-microsoft-visual-sourcesafe" aria-label="Permalink to &quot;A. **Microsoft Visual SourceSafe**&quot;">​</a></h4><p>2005新特征</p><ol><li>通过 HTTP 进行远程 Web 访问</li><li>增强的性能和可伸缩性</li><li>增加的容量，数据存储增至 4 GB</li><li>区域性时区和语言</li></ol><h4 id="b-cvs-开源的" tabindex="-1">B. <strong>CVS</strong>，开源的 <a class="header-anchor" href="#b-cvs-开源的" aria-label="Permalink to &quot;B. **CVS**，开源的&quot;">​</a></h4><h4 id="c-clearcase-ibm开发的企业级管理软件" tabindex="-1">C. <strong>Clearcase</strong>，IBM开发的企业级管理软件 <a class="header-anchor" href="#c-clearcase-ibm开发的企业级管理软件" aria-label="Permalink to &quot;C. **Clearcase**，IBM开发的企业级管理软件&quot;">​</a></h4><h4 id="d-其它的还有pvcs、mks和企业级的ccc-harvest" tabindex="-1">D. 其它的还有<strong>PVCS</strong>、<strong>MKS</strong>和企业级的<strong>CCC Harvest</strong> <a class="header-anchor" href="#d-其它的还有pvcs、mks和企业级的ccc-harvest" aria-label="Permalink to &quot;D. 其它的还有**PVCS**、**MKS**和企业级的**CCC Harvest**&quot;">​</a></h4><h2 id="二、subversion基础" tabindex="-1">二、Subversion基础 <a class="header-anchor" href="#二、subversion基础" aria-label="Permalink to &quot;二、Subversion基础&quot;">​</a></h2><h3 id="_1-发展历史" tabindex="-1">1. 发展历史 <a class="header-anchor" href="#_1-发展历史" aria-label="Permalink to &quot;1. 发展历史&quot;">​</a></h3><p>Subversion是在CVS基础发展而来的，2000年的时候，CollabNet公司的协作软件采用CVS作为版本控制系统，因为CVS本身一些局限性，从而需要一个代替品，然后邀请了Karl Fogel（Open Source Development with CVS）参与开发，14个月后，2001年8月31日，新的版本管理系统Subversion诞生，开始不再用CVS进行版本管理，而使用自己管理自己了。</p><h3 id="_2-特性" tabindex="-1">2. 特性 <a class="header-anchor" href="#_2-特性" aria-label="Permalink to &quot;2. 特性&quot;">​</a></h3><h4 id="目录版本化" tabindex="-1">目录版本化 <a class="header-anchor" href="#目录版本化" aria-label="Permalink to &quot;目录版本化&quot;">​</a></h4><p>CVS只能管理单个文件的更改，而Subversion可以跟踪到目录树的变更</p><h4 id="真实的版本历史" tabindex="-1">真实的版本历史 <a class="header-anchor" href="#真实的版本历史" aria-label="Permalink to &quot;真实的版本历史&quot;">​</a></h4><p>CVS无法实现文件移动改名操作，所以但一个文件搬到另一个地方或者改名，版本号将重新编，而Subversion可以实现移动、改名等操作</p><h4 id="原子提交" tabindex="-1">原子提交 <a class="header-anchor" href="#原子提交" aria-label="Permalink to &quot;原子提交&quot;">​</a></h4><p>将一系列文件的修改组成一个逻辑整体，以后可以一次性还原</p><h4 id="版本号元数据" tabindex="-1">版本号元数据 <a class="header-anchor" href="#版本号元数据" aria-label="Permalink to &quot;版本号元数据&quot;">​</a></h4><p>Subversion不仅能管理文件内容，也能管理文件和目录属性（meta-data）</p><h4 id="可选的网络层" tabindex="-1">可选的网络层 <a class="header-anchor" href="#可选的网络层" aria-label="Permalink to &quot;可选的网络层&quot;">​</a></h4><p>Subversion可以作为扩展模块嵌入Apache，自身还实现了一个轻型独立的服务器软件</p><h4 id="一致的数据操作" tabindex="-1">一致的数据操作 <a class="header-anchor" href="#一致的数据操作" aria-label="Permalink to &quot;一致的数据操作&quot;">​</a></h4><p>Subversion用了二进制差异算法描述文件的变化，所以对于文本文件和二进制文件，操作方法是一样的</p><h4 id="高效的分支和标签操作" tabindex="-1">高效的分支和标签操作 <a class="header-anchor" href="#高效的分支和标签操作" aria-label="Permalink to &quot;高效的分支和标签操作&quot;">​</a></h4><p>Subversion使用一种类似硬链接（Unix名词）的机制拷贝整个工程来对分支和标签进行操作，消耗的时间跟修改部分成正比，而不是整个文件的大小，因此这些操作的开销很小，花费时间很少</p><h4 id="可扩展性" tabindex="-1">可扩展性 <a class="header-anchor" href="#可扩展性" aria-label="Permalink to &quot;可扩展性&quot;">​</a></h4><p>Subversion由一系列结构化的模块组成，具有定义良好的API，使得和其它语言互动操作性很强，而且非常方便维护</p><h4 id="可以选择数据库和纯文件的版本库实现" tabindex="-1">可以选择数据库和纯文件的版本库实现 <a class="header-anchor" href="#可以选择数据库和纯文件的版本库实现" aria-label="Permalink to &quot;可以选择数据库和纯文件的版本库实现&quot;">​</a></h4><p>版本库可以使用嵌入的数据库((DBD，Berkeley database)，也可以使用定义格式的纯文件(FSFS，Native filesystem)</p><h4 id="对象链接的版本化" tabindex="-1">对象链接的版本化 <a class="header-anchor" href="#对象链接的版本化" aria-label="Permalink to &quot;对象链接的版本化&quot;">​</a></h4><p>Unix用户可以在版本控制里置入对象链接，这个链接会在Unix的工作拷贝里重建，但不会在win32工作拷贝里创建。</p><h4 id="可解析的输出" tabindex="-1">可解析的输出 <a class="header-anchor" href="#可解析的输出" aria-label="Permalink to &quot;可解析的输出&quot;">​</a></h4><p>Subversion所有的命令行客户端输出的内容都经过精心的设计，适合人们读取和自动解析；脚本化也具备较高的优先级。</p><h4 id="本地化信息" tabindex="-1">本地化信息 <a class="header-anchor" href="#本地化信息" aria-label="Permalink to &quot;本地化信息&quot;">​</a></h4><p>Subversion会根据本地设置使用gettext()来显示传输错误、报告和帮助信息。</p><h3 id="_3-安装" tabindex="-1">3. 安装 <a class="header-anchor" href="#_3-安装" aria-label="Permalink to &quot;3. 安装&quot;">​</a></h3><p>Subversion建立在APR（Apache Portable Runtime library）可移植层上，APR是独立运行的库，所以Subversion可以运行在所有运行Apache的服务器平台上（Windows、Lunix、BSD、MacOSX、Netware……等等）。</p><p>Subversion官网提供了各种操作系统的相应版本，可以从以下地址获得最新版本，目前最新是1.4.4，<a href="http://subversion.tigris.org/project_packages.html" target="_blank" rel="noreferrer">http://subversion.tigris.org/project_packages.html</a></p><p>针对Windows系统，提供了GUI界面的安装包，安装时只需一路Next下去即可</p><p>这里使用的SVN客户端是TortoiseSVN-1.4.4，将SVN完全整合到资源浏览器，使用非常方便，而且是完全免费的，从官方下载 <a href="http://tortoisesvn.net/" target="_blank" rel="noreferrer">http://tortoisesvn.net/</a></p><p>注意有32位和64位不同版本，官方网站同时提供了各种语言版下载，其中包括可爱的简体中文。</p><p>安装过程也非常简单，一路Next下去就可，安装后会提示重启电脑，重启只是为了在资源管理器显示特有图标，不重启也是可以正常使用的。</p><h3 id="_4-组成" tabindex="-1">4. 组成 <a class="header-anchor" href="#_4-组成" aria-label="Permalink to &quot;4. 组成&quot;">​</a></h3><h4 id="svn命令行客户端" tabindex="-1">Svn命令行客户端 <a class="header-anchor" href="#svn命令行客户端" aria-label="Permalink to &quot;Svn命令行客户端&quot;">​</a></h4><ul><li>Svnversion 报告工作拷贝状态（当前修订版本的项目）的工具</li><li>Svnlook 检查版本库的工具</li><li>Svnadmin 建立、调整和修补版本库的工具</li><li>Svndumpfilter 过滤Subversion版本库转储文件的工具</li><li>mod_dav_svn Apache HTTP服务器的一个插件，可以让版本库在网络上可见</li><li>svnserve 一种单独运行的服务器，可以作为守护进程由SSH调用，另一种让版本库在网络上可见的方式</li></ul><h3 id="_5-配置" tabindex="-1">5. 配置 <a class="header-anchor" href="#_5-配置" aria-label="Permalink to &quot;5. 配置&quot;">​</a></h3><h4 id="_1-建立版本库-repository" tabindex="-1">1. 建立版本库（Repository） <a class="header-anchor" href="#_1-建立版本库-repository" aria-label="Permalink to &quot;1. 建立版本库（Repository）&quot;">​</a></h4><p>在CMD命令行模式下，运行</p><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">svnadmin create f:\\svn\\test</span></span></code></pre></div><p>即可在 F:\\svn目录下建立一个名称为test的版本库 也可以使用TortoiseSVN图形化的完成这一步：</p><p>在目录F:\\svn\\下新建一文件夹test，然后右击test，选<strong>TortoiseSVN &gt;&gt; Create Repository here...</strong>， 然后可以选择版本库模式， 这里使用默认即可， 然后就创建了一系列目录和文件。 运行命令行之前Test目录必须是空的或者尚未有此目录。</p><p>不推荐把版本库创建在网络共享上，如果非要这样做，请使用FSFS格式，而不要用BDB格式！</p><h4 id="_2-配置用户和权限" tabindex="-1">2. 配置用户和权限 <a class="header-anchor" href="#_2-配置用户和权限" aria-label="Permalink to &quot;2. 配置用户和权限&quot;">​</a></h4><p>用记事本打开新建的test\\conf目录下面的svnserve.conf</p><p><code>#password-db = passwd</code></p><p>去掉前面# 号，即改为</p><p><code>password-db = passwd</code></p><p>表示用密码文件进行权限管理，对应文件名为同目录下的passwd文件</p><p>保存，接着再用记事本打开同目录下面passwd文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># harry = harryssecret</span></span>
<span class="line"><span></span></span>
<span class="line"><span># sally = sallyssecret</span></span></code></pre></div><p>同样去掉#号，改为</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>harry = harryssecret</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sally = sallyssecret</span></span></code></pre></div><p>这里表示2个用户，其中harry表示登录用户名，harryssecret表示密码，你可以自己修改</p><p>在svnserve.conf文件打开<code># auth-access = write</code>表示匿名用户可写数据，这不推荐！</p><h4 id="_3-运行独立服务器" tabindex="-1">3. 运行独立服务器 <a class="header-anchor" href="#_3-运行独立服务器" aria-label="Permalink to &quot;3. 运行独立服务器&quot;">​</a></h4><p>在命令行窗口输入</p><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">svnserve </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r f:\\svn</span></span></code></pre></div><h4 id="_4-初始化导入" tabindex="-1">4. 初始化导入 <a class="header-anchor" href="#_4-初始化导入" aria-label="Permalink to &quot;4. 初始化导入&quot;">​</a></h4><p>在要引入的工程文件夹右击，选<strong>TortoiseSVN &gt;&gt; Import...</strong></p><p>URL of repository 输入 <code>svn://localhost/test</code> 点【OK】之后会提示输入用户名密码，按照前面设置的输入即可，如果没报错，就可以看到文件哗啦哗啦的导进版本库了。</p><p>注意这里是在本机操作，所以地址输入<code>svn://localhost/test</code>，如果是远程提交的话，要换成相应IP地址，例如 <code>svn://222.111.26.26/test</code></p><h2 id="三、基本操作" tabindex="-1">三、基本操作 <a class="header-anchor" href="#三、基本操作" aria-label="Permalink to &quot;三、基本操作&quot;">​</a></h2><h3 id="_1-检出-check-out" tabindex="-1">1. 检出 Check Out <a class="header-anchor" href="#_1-检出-check-out" aria-label="Permalink to &quot;1. 检出 Check Out&quot;">​</a></h3><p>在开始干活前，你必须得到一个最新的工作副本，在资源管理器右击空白处，选 <strong>TortoiseSVN &gt;&gt; checkout</strong></p><p>输入目录名后点OK，如果输入的目录名是不存在的，程序会自动创建。</p><p><img src="`+r+`" alt="svn"></p><h3 id="_2-提交-commit" tabindex="-1">2. 提交 Commit <a class="header-anchor" href="#_2-提交-commit" aria-label="Permalink to &quot;2. 提交 Commit&quot;">​</a></h3><p>当完成一个或若干个文件的修改后，选中要提交的文件或文件夹，右击选** TortoiseSVN &gt;&gt; Commit**</p><p>输入备注信息后点OK就可以了，为了方便日后查看，备注信息请尽量写详细。</p><p>有时不清楚具体修改了哪些文件，或者新增了哪些文件，又或者要提交的文件太多了，可以直接右击文件夹进行提交，TortoiseSVN将把需要提交的文件清单列出来，进行选择后再提交即可</p><h3 id="_3-解决冲突" tabindex="-1">3. 解决冲突 <a class="header-anchor" href="#_3-解决冲突" aria-label="Permalink to &quot;3. 解决冲突&quot;">​</a></h3><h3 id="_4-标签-tag" tabindex="-1">4. 标签 Tag <a class="header-anchor" href="#_4-标签-tag" aria-label="Permalink to &quot;4. 标签 Tag&quot;">​</a></h3><h2 id="四、分支与合并" tabindex="-1">四、分支与合并 <a class="header-anchor" href="#四、分支与合并" aria-label="Permalink to &quot;四、分支与合并&quot;">​</a></h2><h3 id="_1-版本库的概念" tabindex="-1">1. 版本库的概念 <a class="header-anchor" href="#_1-版本库的概念" aria-label="Permalink to &quot;1. 版本库的概念&quot;">​</a></h3><h4 id="subversion没有项目的概念-只有版本库" tabindex="-1">Subversion没有项目的概念，只有版本库 <a class="header-anchor" href="#subversion没有项目的概念-只有版本库" aria-label="Permalink to &quot;Subversion没有项目的概念，只有版本库&quot;">​</a></h4><p>版本库记录了每一次修改内容，通过版本库，可以很方便的回朔到某个以前的版本，可以很容易的查看上月某天的某人改了什么东西。</p><p>版本号初始值为0，每次成功提交后递增1，Subversion的版本号是针对整个目录树的，而不是单个文件</p><h3 id="_2-什么是分支" tabindex="-1">2. 什么是分支？ <a class="header-anchor" href="#_2-什么是分支" aria-label="Permalink to &quot;2. 什么是分支？&quot;">​</a></h3><p>例如重庆上的算命网站代码，加入了SVN版本管理，现在新疆也要上算命业务，页面代码上基本是相同的，只有在某些接口存在差异，这时就需要新建一个分支，来对2个网站代码进行管理。</p><p>又例如IBS后台在进行升级改造，这可能需要比较长的时间，而同时又需要对平时出现的一些问题修修补补，最佳方案就是建立分支，让升级和日常维护分开来，虽然这样在升级结束后代码的合并会有些难度，但至少可以保证在升级过程中的代码不会跟日常维护的修改造成混乱。</p><h4 id="分支跟版本库的差别" tabindex="-1">分支跟版本库的差别？ <a class="header-anchor" href="#分支跟版本库的差别" aria-label="Permalink to &quot;分支跟版本库的差别？&quot;">​</a></h4><p>分支跟版本库本来就是不同的东西，不过估计有人看了上面那段话后会问，建立分支是不是等于把版本库重新拷贝一份，所以有了下面的思考</p><ol><li>版本库是重新复制整个文件夹，而分支用了类似Unix下硬链接的技术，只是在已存在的目录树多建一个入口，而不是全盘复制，所以不管是在磁盘空间、消耗时间付出的代价都是非常小的。</li><li>分支之间是相互联系的，可以把某一分支的修改合并到另一分支去，例如某天出了一个SuperSVN的东西，于是有人把本文档建立分支进行修改，于是就有SVN和SuperSVN两个分支了，改着改着发现有段话写错了，这样2个分支就都可能存在这种错误了，如果是2个版本库的话，你就要改2次了，而如果是分支，你可以把一个分支的修改合并到另一分支去，这就是分支的相互联系</li><li>新建版本库，意味着新的权限关系，当然，你也可以把配置文件复制一份到新的版本库</li><li>维护带来的问题？</li></ol><h3 id="_3-使用分支" tabindex="-1">3. 使用分支 <a class="header-anchor" href="#_3-使用分支" aria-label="Permalink to &quot;3. 使用分支&quot;">​</a></h3><h4 id="_1-创建分支" tabindex="-1">1) 创建分支 <a class="header-anchor" href="#_1-创建分支" aria-label="Permalink to &quot;1) 创建分支&quot;">​</a></h4><p>选择要创建分支的文件或文件夹，右击选TortoiseSVN &gt;&gt; Branch/Tag，在 To Url输入分支新路径</p><h4 id="_2-查看分支" tabindex="-1">2) 查看分支 <a class="header-anchor" href="#_2-查看分支" aria-label="Permalink to &quot;2) 查看分支&quot;">​</a></h4><h2 id="五、进阶" tabindex="-1">五、进阶 <a class="header-anchor" href="#五、进阶" aria-label="Permalink to &quot;五、进阶&quot;">​</a></h2><h3 id="_1-以后台服务方式启动" tabindex="-1">1. 以后台服务方式启动 <a class="header-anchor" href="#_1-以后台服务方式启动" aria-label="Permalink to &quot;1. 以后台服务方式启动&quot;">​</a></h3><h3 id="_2-从cvs转换到svn" tabindex="-1">2. 从CVS转换到SVN <a class="header-anchor" href="#_2-从cvs转换到svn" aria-label="Permalink to &quot;2. 从CVS转换到SVN&quot;">​</a></h3><p><strong>本节引用《cvs2svn 把CVS档案库转换为SVN档案库》，作者yasakya</strong></p><p>cvs2svn工具是用来把CVS档案库转换为SVN档案库的。</p><h4 id="_1-安装" tabindex="-1">1. 安装 <a class="header-anchor" href="#_1-安装" aria-label="Permalink to &quot;1. 安装&quot;">​</a></h4><ul><li>python2.4</li></ul><p><a href="http://www.python.org/download/" target="_blank" rel="noreferrer">http://www.python.org/download/</a></p><p>说明：下载最新版本的Python for Windows的安装程序python-2.4.1.msi，按照默认的方式安装Python，假设安装目录是C:\\Python。</p><ul><li>cvs2svn</li></ul><p><a href="http://cvs2svn.tigris.org/servlets/ProjectDocumentList?folderID=2976" target="_blank" rel="noreferrer">http://cvs2svn.tigris.org/servlets/ProjectDocumentList?folderID=2976</a></p><p>说明：用WinRAR解压到任一个目录下。打开命令行窗口转到cvs2svn所在的目录先测试一下python，执行C:\\python\\python cvs2svn，这时候会输出cvs2svn的帮助信息。</p><ul><li>UnxUtils.zip</li></ul><p><a href="http://unxutils.sourceforge.net/" target="_blank" rel="noreferrer">http://unxutils.sourceforge.net/</a></p><p>说明：由于cvs2svn用到了GUN sort工具，因此必须下载UnxUtils.zip，把该压缩包下的usr/local/wbin/sort.exe文件解压到cvs2svn目录中。</p><ul><li>rcs57pc1.zip</li></ul><p><a href="http://www.cs.purdue.edu/homes/trinkle/RCS/" target="_blank" rel="noreferrer">http://www.cs.purdue.edu/homes/trinkle/RCS/</a></p><p>说明：需要用到RCS的一个工具co.exe，下载rcs57pc1.zip，把该压缩包中的bin/win32下的rcslib.dll以及co.exe这两个文件同样解压到cvs2svn目录中。</p><h4 id="_2-使用cvs2svn把cvs档案库转换为svn档案库" tabindex="-1">2. 使用cvs2svn把CVS档案库转换为SVN档案库 <a class="header-anchor" href="#_2-使用cvs2svn把cvs档案库转换为svn档案库" aria-label="Permalink to &quot;2. 使用cvs2svn把CVS档案库转换为SVN档案库&quot;">​</a></h4><p>接下来我们开始转换资源库，输入以下命令</p><p><code>C:\\Python\\python cvs2svn -s d:\\svn\\repository\\project1 \\project1</code></p><p>其中我们假设project1是原有CVS资源库中的一个项目。</p><p>下面是在我的机器上转换完毕后cvs2svn显示详细的统计信息：</p><blockquote><h2 id="cvs2svn-statistics" tabindex="-1">cvs2svn Statistics: <a class="header-anchor" href="#cvs2svn-statistics" aria-label="Permalink to &quot;cvs2svn Statistics:&quot;">​</a></h2><h2 id="total-cvs-files-7total-cvs-revisions-7total-unique-tags-0total-unique-branches-0cvs-repos-size-in-kb-2261total-svn-commits-2first-revision-date-sat-sep-03-15-05-26-2005last-revision-date-sat-sep-03-15-05-27-2005" tabindex="-1">Total CVS Files: 7 Total CVS Revisions: 7 Total Unique Tags: 0 Total Unique Branches: 0 CVS Repos Size in KB: 2261 Total SVN Commits: 2 First Revision Date: Sat Sep 03 15:05:26 2005 Last Revision Date: Sat Sep 03 15:05:27 2005 <a class="header-anchor" href="#total-cvs-files-7total-cvs-revisions-7total-unique-tags-0total-unique-branches-0cvs-repos-size-in-kb-2261total-svn-commits-2first-revision-date-sat-sep-03-15-05-26-2005last-revision-date-sat-sep-03-15-05-27-2005" aria-label="Permalink to &quot;Total CVS Files: 7
Total CVS Revisions: 7
Total Unique Tags: 0
Total Unique Branches: 0
CVS Repos Size in KB: 2261
Total SVN Commits: 2
First Revision Date: Sat Sep 03 15:05:26 2005
Last Revision Date: Sat Sep 03 15:05:27 2005&quot;">​</a></h2><h2 id="timings" tabindex="-1">Timings: <a class="header-anchor" href="#timings" aria-label="Permalink to &quot;Timings:&quot;">​</a></h2><p>pass 1: 0 seconds pass 2: 0 seconds pass 3: 0 seconds pass 4: 0 seconds pass 5: 0 seconds pass 6: 0 seconds pass 7: 0 seconds pass 8: 1 second total: 3 seconds</p></blockquote><p>转换完毕后我们用浏览器打开 <code>http://localhost/svn/project1</code> 即可看到SVN仓库</p><p>注意如果要用 --encode=gb2312，必须使用python2.4以上版本</p><h2 id="六、附录" tabindex="-1">六、附录 <a class="header-anchor" href="#六、附录" aria-label="Permalink to &quot;六、附录&quot;">​</a></h2><h3 id="a-参考资源" tabindex="-1">A. 参考资源 <a class="header-anchor" href="#a-参考资源" aria-label="Permalink to &quot;A. 参考资源&quot;">​</a></h3><ul><li><a href="http://www.subversion.org.cn/index.php?option=com_content&amp;task=view&amp;id=72&amp;Itemid=9" target="_blank" rel="noreferrer">《Subversion特性》</a></li><li>《使用Subversion进行版本控制》中文版</li><li>《TortoiseSVN帮助手册中文版 1.5版》</li><li><a href="http://www.iusesvn.com/bbs/viewthread.php?tid=245" target="_blank" rel="noreferrer">《把CVS档案库转换为SVN档案库》</a></li></ul><h3 id="b-相关资源" tabindex="-1">B. 相关资源 <a class="header-anchor" href="#b-相关资源" aria-label="Permalink to &quot;B. 相关资源&quot;">​</a></h3><ul><li>Subversion <a href="http://subversion.tigris.org/" target="_blank" rel="noreferrer">http://subversion.tigris.org/</a></li><li>TortoiseSVN <a href="http://www.tortoisesvn.net" target="_blank" rel="noreferrer">http://www.tortoisesvn.net</a></li><li>SVNmanager 基于PHP的SVN管理工具 <a href="http://svnmanager.sourceforge.net/" target="_blank" rel="noreferrer">http://svnmanager.sourceforge.net/</a></li><li>Easysvn 一个开源的SVN客户端 <a href="http://code.google.com/p/easysvn/" target="_blank" rel="noreferrer">http://code.google.com/p/easysvn/</a></li></ul>`,139),n=[o];function l(h,c,p,d,u,b){return t(),e("div",{"data-pagefind-body":!0},n)}const S=a(i,[["render",l]]);export{m as __pageData,S as default};
