import{_ as s,o as i,c as a,a7 as t}from"./chunks/framework.ClMj9r9D.js";const h="/images/2006/11/25_12763.jpg",y=JSON.parse('{"title":"《XUL指南》第四章：更多布局元素","description":"","frontmatter":{"title":"《XUL指南》第四章：更多布局元素","tags":["xml","XUL","XUL指南"],"id":903,"categories":["Web"],"abbrlink":"fb42f1fd","date":"2006-11-25T18:18:48.000Z"},"headers":[],"relativePath":"web/XUL指南_第四章_更多布局元素.md","filePath":"web/XUL指南_第四章_更多布局元素.md","lastUpdated":1719711816000}'),k={name:"web/XUL指南_第四章_更多布局元素.md"},l=t(`<p>翻译时间：06年4月10日，本章未翻译完，不过可能不会再译了</p><h2 id="四、更多布局元素" tabindex="-1">四、更多布局元素 <a class="header-anchor" href="#四、更多布局元素" aria-label="Permalink to &quot;四、更多布局元素&quot;">​</a></h2><h3 id="_4-1-stacks-和-decks" tabindex="-1">4.1 Stacks 和 Decks <a class="header-anchor" href="#_4-1-stacks-和-decks" aria-label="Permalink to &quot;4.1 Stacks 和 Decks&quot;">​</a></h3><p>有时需要将内容重叠起来，就像重叠的卡片，stack和deck元素可以实现这效果。</p><h4 id="容器" tabindex="-1">容器 <a class="header-anchor" href="#容器" aria-label="Permalink to &quot;容器&quot;">​</a></h4><p>每个XUL里面BOX都是一个可以包含任何内容的容器 ，容器里面有许多不同类型的元素，例如工具栏、标签面板（Tabbed Panels）。BOX标签只是创建一个简单的容器，而里面其它元素将按默认规则工作，但它们有另外特征。</p><p>事实上，很多控件可以包含其它元素，例如我们之前看过的按钮。在容器里面滚动条（Scroll Bar）是一个特殊元素， 在接下来几节里，我们将介绍一些服务于其它元素的元素，它们都是特殊元素以及拥有容器的所有属性。</p><h4 id="stacks" tabindex="-1">Stacks <a class="header-anchor" href="#stacks" aria-label="Permalink to &quot;Stacks&quot;">​</a></h4><p>stack元素是一个简单的容器，工作方式跟其它容器一样但有特殊性质，它子级元素是重叠排列的。第一个子元素渲染底部，第二个渲染第二层，接下来的元素渲染第三层，一层一层覆盖上去。</p><p>在stack容器中很少使用orient属性来规定子元素重叠或并行排列。stack容器的大小决定了子级元素最大值，但你可以使用CSS属性width，height，min-width和其它相关属性来描述stack和子级元素。 stack元素可以用来在现有元素上加状态显示，例如在进度条上加标签。</p><p>了解一些CSS属性可以更方便的使用stack元素，例如你可以做个类似text-shadow属性的简单效果，像这样：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">stack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Shadowed&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;padding-left: 1px; padding-top: 1px; font-size: 15pt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Shadowed&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color: red; font-size: 15pt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">stack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>两个 <code>description</code> 元素创建了15磅文本，首先用padding属性使它向右下方偏移1个象素，然后再用默认方式描绘shadowed文本，设为红色以便有明显效果。</p><p>这个方法比text-shadow有优势，因为可以很完美的描绘主文字的阴影部分。它可以设置自己的字体、下划线或大小（你甚至可以使阴影发光）。在Mozilla当前无法支持CSS文本阴影属性的情况下这个方法是很有用的。唯一的缺点就是阴影会使stack容器尺寸比较大。阴影效果在创建无效按钮的时候非常有用。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">stack</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background-color: #C0C0C0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Disabled&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color: white; padding-left: 1px; padding-top: 1px;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Disabled&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color: grey;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">stack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><img src="`+h+`" alt="">在一些平台上，这种文本的排列方法加上阴影颜色创建了类似失效的文本效果。</p><p>必须记住的是鼠标点击和敲击按键只能激活最上层元素的事件，也就是最后加载的元素，在stack底部的的元素例如按钮是不起作用的。</p><h4 id="stacks-1" tabindex="-1">Stacks <a class="header-anchor" href="#stacks-1" aria-label="Permalink to &quot;Stacks&quot;">​</a></h4><p>deck跟stack元素一样用于布置子级元素重叠，但是deck在同一时间只能显示其中一个子元素。这在有相似面板的向导界面用于显示流程非常有用。比起创建独立窗口再增加相同的导航按钮到每个窗口，你可以只创建一个窗口然后使用deck来更换内容。</p><p>在deck元素里显示页类似stack元素中的子级。比如deck元素有3个子级，你可以用selectedIndex属性来更换显示页，索引用来识别显示哪个内容页，从0开始，所有第一个显示页的索引值是0，第二个是1，依此类推。</p><p>请看下面关于deck的例子：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">deck</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> selectedIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is the first page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is the second page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is the third page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is also the third page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">deck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>deck元素包含3个页面，初始页是第三个，它是包含2个元素的容器，容器以及包含的元素都将显示在最上层，deck将跟子级一样大，在这里会跟第三个页面一样大。</p><p>你可以使用教本改变selectedIndex属性来切换页面，更多内容将在《事件和DOM》章节做介绍。</p>`,24),n=[l];function p(e,E,d,r,g,o){return i(),a("div",{"data-pagefind-body":!0},n)}const F=s(k,[["render",p]]);export{y as __pageData,F as default};
