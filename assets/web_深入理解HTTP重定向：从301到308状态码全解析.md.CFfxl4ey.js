import{_ as s,o as i,c as a,a7 as t}from"./chunks/framework.Baf15UXz.js";const l="/images/2024/03/http304.png",u=JSON.parse('{"title":"深入理解HTTP重定向：从301到308状态码全解析","description":"","frontmatter":{"title":"深入理解HTTP重定向：从301到308状态码全解析","categories":["Web"],"tags":["http","web"],"abbrlink":"8563c276","date":"2024-03-26T17:16:06.000Z"},"headers":[],"relativePath":"web/深入理解HTTP重定向：从301到308状态码全解析.md","filePath":"web/深入理解HTTP重定向：从301到308状态码全解析.md","lastUpdated":1719711816000}'),e={name:"web/深入理解HTTP重定向：从301到308状态码全解析.md"},n=t('<p>从HTTP状态码的基本概念开始，逐步介绍不同类型的重定向及其应用场景。无论您是初学者还是有经验的开发人员，都能从本文中获得实用的知识和技巧。</p><h3 id="_1-http状态码" tabindex="-1">1. http状态码 <a class="header-anchor" href="#_1-http状态码" aria-label="Permalink to &quot;1. http状态码&quot;">​</a></h3><p>http状态码是客户端和服务器端进行http通讯时，服务端发给客户端的数字代码（3位数字组成），用于表示服务器对请求的处理结果，比如常见的404</p><h3 id="_2-http重定向" tabindex="-1">2. http重定向 <a class="header-anchor" href="#_2-http重定向" aria-label="Permalink to &quot;2. http重定向&quot;">​</a></h3><p>http重定向是服务端返回的处理结果中一种，用于指示客户端请求的资源在其它位置</p><p>http重定向的状态码为 3xx，常见的有301和303</p><ul><li><strong>301 Moved Permanently</strong> 永久重定向，应该更新资源地址，以便下次直接请求到新位置</li><li><strong>302 Found</strong> 临时重定向，保持原始请求方法（Get/Post）来获取新位置的资源，可能会被浏览器缓存</li><li><strong>303 See Other</strong> 临时重定向，使用Get方法获取新位置的资源，不会被浏览器缓存</li><li><strong>307 Temporary Redirect</strong> 临时重定向，跟302的行为一致，比302更加严格的要求使用相同http方法去请求新位置的资源</li><li><strong>308 Permanent Redirect</strong> 永久重定向，跟301类似，强调保留原始请求的http方法（Get/Post）</li><li><strong>300 Multiple Choices</strong> 多重选择，服务端会返回多个URI的列表，由客户端选择</li><li><strong>304 Not Modified</strong> 未修改，表示请求资源自上次请求之后未修改，可以直接从缓存获取</li></ul><h3 id="_3-重定向的常见使用场景" tabindex="-1">3. 重定向的常见使用场景 <a class="header-anchor" href="#_3-重定向的常见使用场景" aria-label="Permalink to &quot;3. 重定向的常见使用场景&quot;">​</a></h3><ul><li>301 永久重定向 <ul><li>网站结构更改，旧URL重定向到新URL</li><li>域名更改，旧域名重定向到新域名</li><li>移动设备访问PC页面，重定向到移动版本页面</li></ul></li><li>302 临时重定向 <ul><li>网站更新维护，暂时重定向到维护页面</li><li>宕机或网络拥堵，暂时把请求转移其它CDN减轻服务器负载</li><li>灰度测试</li></ul></li><li>303 临时重定向(Get) <ul><li>POST请求或表单提交，为了避免重复提交，重定向到操作成功页面</li></ul></li><li>307 临时重定向 <ul><li>同302，严格要求保持原请求方法</li></ul></li><li>308 永久重定向 <ul><li>同301，严格要求保持原请求方法</li></ul></li></ul><h3 id="_4-善用304加快速度" tabindex="-1">4. 善用304加快速度 <a class="header-anchor" href="#_4-善用304加快速度" aria-label="Permalink to &quot;4. 善用304加快速度&quot;">​</a></h3><p>严格来说304并非重定向，而是告知服务端资源未修改。</p><p><img src="'+l+`" alt="304重定向" title="304重定向"></p><p>当客户端发送一个带有条件请求头（如If-Modified-Since或If-None-Match）的Get请求，如果服务端检测到内容未修改，则直接返回304状态码，返回http包只含头部信息，并非完整的资源内容，从而节省网络带宽。 此时客户端直接使用缓存资源，也就加快了加载速度，提升用户体验。</p><p>极端情况是缓存资源受到破坏，无法加载，此时客户端会再发送普通Get请求，而不是带条件的请求，服务端则返回完整的资源内容。</p><h3 id="_5-300-多重选择" tabindex="-1">5. 300 多重选择 <a class="header-anchor" href="#_5-300-多重选择" aria-label="Permalink to &quot;5. 300 多重选择&quot;">​</a></h3><p>当返回300状态码时，浏览器不会自动进行重定向，需要客户端根据返回的列表，自行选择其中一个URL，并重新发起请求</p><p>一般返回格式有两种，</p><p>JSON</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;choices&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://example.com/resource1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://example.com/resource2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://example.com/resource3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>还有XML</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">choices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;https://example.com/resource1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;https://example.com/resource2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;https://example.com/resource3&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">choices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>其中<code>choices</code>是常见命名，非固定的标准命名，也有其它的如 <code>options</code>、<code>alternatives</code>、<code>items</code></p><p>常见的JSON格式还有</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;alternatives&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/resource1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Resource 1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/resource2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Resource 2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/resource3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Resource 3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在日常的Web开发中，正确地使用重定向是至关重要的。无论是进行网站重构、域名更改，还是优化用户体验，我们都应该根据具体的情况选择合适的重定向类型，并遵循最佳实践。只有这样，我们才能确保网站的可访问性、性能和用户满意度。</p>`,25),h=[n];function p(k,r,E,o,d,c){return i(),a("div",{"data-pagefind-body":!0},h)}const y=s(e,[["render",p]]);export{u as __pageData,y as default};
