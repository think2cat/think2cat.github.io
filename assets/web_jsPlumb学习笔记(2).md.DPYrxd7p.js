import{_ as s,c as i,o as a,a7 as n}from"./chunks/framework.SbOxrpL8.js";const t="/images/2018/01/js6.gif",l="/images/2018/01/js7.gif",p="/images/2018/01/js8.png",h="/images/2018/01/js9.png",k="/images/2018/01/js10.png",m=JSON.parse('{"title":"jsPlumb学习笔记（2）","description":"","frontmatter":{"title":"jsPlumb学习笔记（2）","tags":["javascript","jsPlumb"],"id":1881,"categories":["Web"],"abbrlink":"c1587beb","date":"2018-01-10T17:11:38.000Z"},"headers":[],"relativePath":"web/jsPlumb学习笔记(2).md","filePath":"web/jsPlumb学习笔记(2).md","lastUpdated":1719711816000}'),E={name:"web/jsPlumb学习笔记(2).md"},e=n(`<p>完成元素拖动后，接着做连线，连线由几部分组成</p><ol><li>Endpoint 端点，默认为圆点</li><li>Connector 连接线，默认为贝塞尔曲线</li><li>Anchor 锚点，不可见元素，跟Endpoint是绑定的，在动态创建连接线时使用</li><li>Overlay 覆盖物，如连线上的箭头，也可以是文字或dom元素</li></ol><p>当容器append了一个dom后，调用addEndpoint来增加输出和输入端点，该函数接受3个参数，分别是dom，参数以及附加参数</p><p>共用的参数可以写进附加参数，然后参数里相同的属性会进行覆盖 参数详细介绍在这里 <a href="https://jsplumbtoolkit.com/community/apidocs/classes/jsPlumb.html#method_addEndpoint" target="_blank" rel="noreferrer">addEndpoint</a></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jsPlumb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newDom, { isTarget: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, anchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Left&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jsPlumb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newDom, { isSource: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, anchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Right&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><p>增加输出和输入端点后，即可进行连线</p><p><img src="`+t+`" alt=""></p><p>连线操作OK，有点丑，加个样式看看</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connectorStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//端点样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	paintStyle: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#7AB02C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		radius: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//连线类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	connector: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Flowchart&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			stub: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			gap: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			cornerRadius: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			alwaysRespectStubs: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//连线样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	connectorStyle: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		strokeWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#9C9DA9&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		joinstyle: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;round&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		outlineStroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;none&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//鼠标移上样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	hoverPaintStyle: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#216477&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#216477&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jsPlumb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newDom, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	isTarget: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	anchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Left&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, connectorStyle);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jsPlumb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newDom, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	isSource: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	anchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Right&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	paintStyle: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#7AB02C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;transparent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		radius: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		strokeWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, connectorStyle);</span></span></code></pre></div><p>为了区分输出和输入端点，把输出点改为空心样式</p><p><img src="`+l+'" alt=""></p><p>看着感觉有点怪，少了箭头，接着添加覆盖物overlay</p><p>overlay有几种类型</p><ul><li><p>Arrow 箭头</p></li><li><p>Plain Arrow 平底箭头，相当于[&quot;Arrow&quot;, { foldback: 1}]</p></li><li><p>Diamond 钻石，相当于[&quot;Arrow&quot;, { foldback: 2}]</p></li><li><p>Label 就是文本</p></li><li><p>Custom 自定义，支持HTML</p><p><img src="'+p+`" alt=""></p></li></ul><p>上文[&quot;Arrow&quot;, { foldback:1}]中的foldback是调整粗细的，常用属性还有location，用于调整XY位置</p><ul><li>当0≤ x,y ≥ 1时表示距离source的百分比，0.5就是中间</li><li>当 &gt; 1时表示距离source的像素，10就是距离source 10个像素的位置</li><li>当 &lt; 0时表示距离target的像素，-5就是距离target 5个像素 Label属性用在label标签上， [ &quot;Label&quot;, { label:&quot;cat&quot;, id:&quot;label&quot;, location:[-0.5, -0.5] } ]</li></ul><p>加入overlay有几种途径</p><ol><li><p>设置全局默认属性</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsPlumb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">importDefaults</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 	ConnectionOverlays: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 		[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Arrow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {location: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 	]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div></li><li><p>创建端点时，附加属性来控制，比如前面的connectorStyle</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connectorStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 	connectorOverlays: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 		[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Arrow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {location: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;arrow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 		[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 				label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;21ido.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 				location: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 			}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 		]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 	]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>overlay是可以多个，这样在连线是除了箭头，还多了文字</p><p><img src="`+h+`" alt=""></p></li><li><p>connect方法动态创建</p><p>在调用jsPlumb.addEndpoint时，将返回endpoint对象，假设连线是通过JS创建，而不是鼠标拖动完成</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jsPlumb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	source: pointSource,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	target: pointTarget,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	overlays: [[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Custom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;img src=&#39;http://bpic.588ku.com/element_origin_min_pic/00/93/91/4056f2b13a70c32.jpg&#39; /&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;smile&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>动态创建连线，overlay是自定义html元素，一个笑脸图片</p><p>除了连线overlay，端点也可以增加overlay，比如在源端点增加一个文字</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jsPlumb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newDom, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	isSource: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	anchor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Right&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	paintStyle: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		stroke: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#7AB02C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		fill: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;transparent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		radius: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		strokeWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	overlays: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;source&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				location: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				cssClass: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;endpointLabel&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, connectorStyle);</span></span></code></pre></div><p>效果如下图 <img src="`+k+'" alt=""></p></li></ol>',18),r=[e];function d(o,g,y,c,u,F){return a(),i("div",{"data-pagefind-body":!0},r)}const b=s(E,[["render",d]]);export{m as __pageData,b as default};
