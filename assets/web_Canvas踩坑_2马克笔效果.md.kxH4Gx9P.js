import{_ as e,c as a,o as r,a7 as p}from"./chunks/framework.SbOxrpL8.js";const n="/images/2018/12/markerpen0.png",t="/images/2018/12/markerpen1.png",s="/images/2018/12/markerpen2.png",o="/images/2018/12/markerpen3.png",_="/images/2018/12/markerpen4.png",i="/images/2018/12/markerpen5.png",c="/images/2018/12/markerpen6.png",w=JSON.parse('{"title":"Canvas踩坑(2)马克笔效果","description":"","frontmatter":{"prev":{"text":"Canvas踩坑(1)实时透明线","link":"/web/Canvas踩坑_1实时透明线"},"title":"Canvas踩坑(2)马克笔效果","categories":["Web"],"tags":["javascript","canvas"],"abbrlink":"27f27d32","date":"2018-12-24T19:52:27.000Z"},"headers":[],"relativePath":"web/Canvas踩坑_2马克笔效果.md","filePath":"web/Canvas踩坑_2马克笔效果.md","lastUpdated":1719711816000}'),m={name:"web/Canvas踩坑_2马克笔效果.md"},g=p('<p><img src="'+n+'" alt="Marker Pen"></p><p>画笔里面，马克笔算是比较简单，比较难的是铅笔和毛笔</p><p>一般的线是由点连起来的，设置好 <code>lineCap</code> 和 <code>lineJoin</code> 即可，但马克笔是由<strong>块</strong>连起来的</p><p>当我们拿到一个XY坐标点后，需进行扩大，使其变成一个矩形</p><p><img src="'+t+'" alt="Marker Pen"></p><p>每个点转成矩形后，会形成这样的效果</p><p><img src="'+s+'" alt="Marker Pen"></p><p>所以还需要依次将各个矩形连起来</p><p><img src="'+o+'" alt="Marker Pen"></p><p>连起来需要6个点，这6个点还需要根据2个坐标点的相对位置来判断 如果是上下或左右的移动，则只需4个点</p><p>将每2个坐标点连起来后是这样</p><p><img src="'+_+'" alt="Marker Pen"></p><p>然后 <code>fill()</code> 进行填充</p><p><img src="'+i+'" alt="Marker Pen"></p><p>然后我就懵逼</p><p><img src="'+c+'" alt="Marker Pen"></p><p>放大看，会发现有些重叠的区域并没有被填充</p><p>没有填充是因为canvas把那些区域判断为线外区域，这涉及到nonzero和evenodd填充规则，可以看下 张鑫旭的这篇 <a href="https://www.zhangxinxu.com/wordpress/2018/10/nonzero-evenodd-fill-mode-rule/" target="_blank" rel="noreferrer">《搞懂SVG/Canvas中nonzero和evenodd填充规则》</a></p><p>简单说就是连点方式顺时针和逆时针的差异，导致了填充时把内部区域判断为外部区域</p><p>测试发现只有在点往左下方画的时候会出现这个问题，于是单独把往右下角的连线方式改为逆时针，问题就解决了 比如已上图为例，默认连线是 A1 -&gt; B1 -&gt; B2 -&gt; C2 -&gt; D2 -&gt; D1 -&gt; A1 则逆时针反过来连，这跟交叉线夹角有关</p>',20),d=[g];function l(k,v,f,C,P,b){return r(),a("div",{"data-pagefind-body":!0},d)}const u=e(m,[["render",l]]);export{w as __pageData,u as default};
